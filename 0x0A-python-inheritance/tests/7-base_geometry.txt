Using ``7-base_geometry.py``
python3 -m doctest -v ./tests/7-base_geometry.txt


    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()


1. Send a positive integer
    >>> bg.integer_validator("name", 15)
    


2. Send a string
    >>> bg.integer_validator("name", "string")
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer


3. Send a zero
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0


4. Send negative number
    >>> bg.integer_validator("age", -3)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0


5. One argument missing
    >>> bg.integer_validator("age")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'


6. Two arguments missing
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


7. Send a bool
    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer


8. Send float
    >>> bg.integer_validator("age", 3.33)
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer


9. Send NaN
    >>> bg.integer_validator("age", int('nan'))
    Traceback (most recent call last):
        ...
    ValueError: invalid literal for int() with base 10: 'nan'


--------------------------------------------------------


Using area()
    >>> bg.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented


